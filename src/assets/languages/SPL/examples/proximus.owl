Prefix(:=<http://www.proximus.be/business-policy#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)


Ontology(<http://www.proximus.be/business-policy>
Import(<http://www.specialprivacy.eu/langs/usage-policy>)
Import(<http://www.specialprivacy.eu/langs/business-policy/>)
Import(<http://www.specialprivacy.eu/langs/business-policy/1.0>)
Import(<http://www.specialprivacy.eu/langs/usage-policy/1.0>)
Import(<http://www.specialprivacy.eu/regulations/gdpr>)
Import(<http://www.specialprivacy.eu/vocabs/data>)
Import(<http://www.specialprivacy.eu/vocabs/duration>)
Import(<http://www.specialprivacy.eu/vocabs/locations>)
Import(<http://www.specialprivacy.eu/vocabs/processing>)
Import(<http://www.specialprivacy.eu/vocabs/purposes>)
Import(<http://www.specialprivacy.eu/vocabs/recipients>)

Declaration(Class(:DataCleanUp))
Declaration(Class(:Policy1))
Declaration(Class(:Policy2))
Declaration(Class(:Policy3))
Declaration(Class(:Policy4))
Declaration(Class(:Policy5))
Declaration(Class(:Policy6))
Declaration(Class(:Profile4RecommenderSystem))
Declaration(Class(:RecommendBelgianCoastEvents))

Declaration(AnnotationProperty(:activityDescription))




############################
#   Classes
############################

# Class: :DataCleanUp (:DataCleanUp)

SubClassOf(:DataCleanUp <http://www.specialprivacy.eu/langs/usage-policy#AnyPurpose>)

# Class: :Policy1 (:Policy1)

AnnotationAssertion(:activityDescription :Policy1 "Ingest tourist events data for recommender system."^^xsd:string)
AnnotationAssertion(rdfs:comment :Policy1 "Aggregate and/or Derive also seem appropriate as Processing activity.")
EquivalentClasses(:Policy1 ObjectIntersectionOf(ObjectSomeValuesFrom(<http://www.specialprivacy.eu/langs/usage-policy#hasData> <http://www.specialprivacy.eu/vocabs/data#NonPersonalData>) ObjectSomeValuesFrom(<http://www.specialprivacy.eu/langs/usage-policy#hasProcessing> <http://www.specialprivacy.eu/vocabs/processing#IncomingTransfer>) ObjectSomeValuesFrom(<http://www.specialprivacy.eu/langs/usage-policy#hasPurpose> :RecommendBelgianCoastEvents) ObjectSomeValuesFrom(<http://www.specialprivacy.eu/langs/usage-policy#hasRecipient> <http://www.specialprivacy.eu/vocabs/recipients#Ours>) ObjectSomeValuesFrom(<http://www.specialprivacy.eu/langs/usage-policy#hasStorage> ObjectIntersectionOf(ObjectSomeValuesFrom(<http://www.specialprivacy.eu/langs/usage-policy#hasDuration> <http://www.specialprivacy.eu/vocabs/duration#BusinessPractices>) ObjectSomeValuesFrom(<http://www.specialprivacy.eu/langs/usage-policy#hasLocation> ObjectIntersectionOf(<http://www.specialprivacy.eu/vocabs/locations#EU> <http://www.specialprivacy.eu/vocabs/locations#ProcessorServers>))))))

# Class: :Policy2 (:Policy2)

AnnotationAssertion(:activityDescription :Policy2 "Ingest Proximus service usage (CDR, location, TV viewing,â€¦) data for recommender system."^^xsd:string)
EquivalentClasses(:Policy2 ObjectIntersectionOf(ObjectSomeValuesFrom(<http://www.specialprivacy.eu/langs/business-policy#hasDuty> <http://www.specialprivacy.eu/regulations/gdpr#Art12-22_SubjectRights>) ObjectSomeValuesFrom(<http://www.specialprivacy.eu/langs/business-policy#hasDuty> <http://www.specialprivacy.eu/regulations/gdpr#Art32-37_Obligations>) ObjectSomeValuesFrom(<http://www.specialprivacy.eu/langs/usage-policy#hasData> ObjectIntersectionOf(<http://www.specialprivacy.eu/vocabs/data#PersonalData> ObjectUnionOf(<http://www.specialprivacy.eu/vocabs/data#AudiovisualActivity> <http://www.specialprivacy.eu/vocabs/data#Demographic> <http://www.specialprivacy.eu/vocabs/data#Location> <http://www.specialprivacy.eu/vocabs/data#Navigation> <http://www.specialprivacy.eu/vocabs/data#OnlineActivity> <http://www.specialprivacy.eu/vocabs/data#TelecomActivity>))) ObjectSomeValuesFrom(<http://www.specialprivacy.eu/langs/usage-policy#hasProcessing> <http://www.specialprivacy.eu/vocabs/processing#Tracking>) ObjectSomeValuesFrom(<http://www.specialprivacy.eu/langs/usage-policy#hasPurpose> :RecommendBelgianCoastEvents) ObjectSomeValuesFrom(<http://www.specialprivacy.eu/langs/usage-policy#hasRecipient> <http://www.specialprivacy.eu/vocabs/recipients#Ours>) ObjectSomeValuesFrom(<http://www.specialprivacy.eu/langs/usage-policy#hasStorage> ObjectIntersectionOf(ObjectSomeValuesFrom(<http://www.specialprivacy.eu/langs/usage-policy#hasDuration> <http://www.specialprivacy.eu/vocabs/duration#StatedPurpose>) ObjectSomeValuesFrom(<http://www.specialprivacy.eu/langs/usage-policy#hasLocation> ObjectIntersectionOf(<http://www.specialprivacy.eu/vocabs/locations#EU> <http://www.specialprivacy.eu/vocabs/locations#ProcessorServers>)) DataSomeValuesFrom(<http://www.specialprivacy.eu/langs/usage-policy#durationInDays> DatatypeRestriction(xsd:integer xsd:maxInclusive "42"^^xsd:integer)))) ObjectSomeValuesFrom(<http://www.specialprivacy.eu/regulations/gdpr#hasLegalBasis> <http://www.specialprivacy.eu/regulations/gdpr#Art6_1_a_Consent>)))

# Class: :Policy3 (:Policy3)

AnnotationAssertion(:activityDescription :Policy3 "Collect personal information for contacting the data subject."^^xsd:string)
EquivalentClasses(:Policy3 ObjectIntersectionOf(ObjectSomeValuesFrom(<http://www.specialprivacy.eu/langs/business-policy#hasDuty> <http://www.specialprivacy.eu/regulations/gdpr#Art12-22_SubjectRights>) ObjectSomeValuesFrom(<http://www.specialprivacy.eu/langs/business-policy#hasDuty> <http://www.specialprivacy.eu/regulations/gdpr#Art32-37_Obligations>) ObjectSomeValuesFrom(<http://www.specialprivacy.eu/langs/usage-policy#hasData> ObjectIntersectionOf(<http://www.specialprivacy.eu/vocabs/data#PersonalData> ObjectUnionOf(<http://www.specialprivacy.eu/vocabs/data#Demographic> <http://www.specialprivacy.eu/vocabs/data#Online> <http://www.specialprivacy.eu/vocabs/data#Physical>))) ObjectSomeValuesFrom(<http://www.specialprivacy.eu/langs/usage-policy#hasProcessing> <http://www.specialprivacy.eu/vocabs/processing#Collect>) ObjectSomeValuesFrom(<http://www.specialprivacy.eu/langs/usage-policy#hasPurpose> <http://www.specialprivacy.eu/vocabs/purposes#AnyContact>) ObjectSomeValuesFrom(<http://www.specialprivacy.eu/langs/usage-policy#hasRecipient> <http://www.specialprivacy.eu/vocabs/recipients#Ours>) ObjectSomeValuesFrom(<http://www.specialprivacy.eu/langs/usage-policy#hasStorage> ObjectIntersectionOf(ObjectSomeValuesFrom(<http://www.specialprivacy.eu/langs/usage-policy#hasDuration> <http://www.specialprivacy.eu/vocabs/duration#BusinessPractices>) ObjectSomeValuesFrom(<http://www.specialprivacy.eu/langs/usage-policy#hasLocation> ObjectIntersectionOf(<http://www.specialprivacy.eu/vocabs/locations#ControllerServers> <http://www.specialprivacy.eu/vocabs/locations#EU>)))) ObjectSomeValuesFrom(<http://www.specialprivacy.eu/regulations/gdpr#hasLegalBasis> <http://www.specialprivacy.eu/regulations/gdpr#Art6_1_b_Contract>)))

# Class: :Policy4 (:Policy4)

AnnotationAssertion(:activityDescription :Policy4 "Collect or update personal interest of the data subject."^^xsd:string)
AnnotationAssertion(rdfs:comment :Policy4 "Initially, the legal basis was Art6_1_e_LegitimateInterest.")
EquivalentClasses(:Policy4 ObjectIntersectionOf(ObjectSomeValuesFrom(<http://www.specialprivacy.eu/langs/business-policy#hasDuty> <http://www.specialprivacy.eu/regulations/gdpr#Art12-22_SubjectRights>) ObjectSomeValuesFrom(<http://www.specialprivacy.eu/langs/business-policy#hasDuty> <http://www.specialprivacy.eu/regulations/gdpr#Art32-37_Obligations>) ObjectSomeValuesFrom(<http://www.specialprivacy.eu/langs/usage-policy#hasData> ObjectIntersectionOf(:Profile4RecommenderSystem <http://www.specialprivacy.eu/vocabs/data#PersonalData>)) ObjectSomeValuesFrom(<http://www.specialprivacy.eu/langs/usage-policy#hasProcessing> <http://www.specialprivacy.eu/vocabs/processing#Update>) ObjectSomeValuesFrom(<http://www.specialprivacy.eu/langs/usage-policy#hasPurpose> :RecommendBelgianCoastEvents) ObjectSomeValuesFrom(<http://www.specialprivacy.eu/langs/usage-policy#hasRecipient> <http://www.specialprivacy.eu/vocabs/recipients#Ours>) ObjectSomeValuesFrom(<http://www.specialprivacy.eu/langs/usage-policy#hasStorage> ObjectIntersectionOf(ObjectSomeValuesFrom(<http://www.specialprivacy.eu/langs/usage-policy#hasDuration> <http://www.specialprivacy.eu/vocabs/duration#BusinessPractices>) ObjectSomeValuesFrom(<http://www.specialprivacy.eu/langs/usage-policy#hasLocation> ObjectIntersectionOf(<http://www.specialprivacy.eu/vocabs/locations#ControllerServers> <http://www.specialprivacy.eu/vocabs/locations#EU>)))) ObjectSomeValuesFrom(<http://www.specialprivacy.eu/regulations/gdpr#hasLegalBasis> <http://www.specialprivacy.eu/regulations/gdpr#Art6_1_a_Consent>)))

# Class: :Policy5 (:Policy5)

AnnotationAssertion(:activityDescription :Policy5 "Create a personal interest profile for a data subject."^^xsd:string)
EquivalentClasses(:Policy5 ObjectIntersectionOf(ObjectSomeValuesFrom(<http://www.specialprivacy.eu/langs/business-policy#hasDuty> <http://www.specialprivacy.eu/regulations/gdpr#Art12-22_SubjectRights>) ObjectSomeValuesFrom(<http://www.specialprivacy.eu/langs/business-policy#hasDuty> <http://www.specialprivacy.eu/regulations/gdpr#Art32-37_Obligations>) ObjectSomeValuesFrom(<http://www.specialprivacy.eu/langs/usage-policy#hasData> ObjectIntersectionOf(<http://www.specialprivacy.eu/vocabs/data#PersonalData> ObjectUnionOf(<http://www.specialprivacy.eu/vocabs/data#AudiovisualActivity> <http://www.specialprivacy.eu/vocabs/data#Location> <http://www.specialprivacy.eu/vocabs/data#Navigation> <http://www.specialprivacy.eu/vocabs/data#OnlineActivity> <http://www.specialprivacy.eu/vocabs/data#Preference> <http://www.specialprivacy.eu/vocabs/data#TelecomActivity>))) ObjectSomeValuesFrom(<http://www.specialprivacy.eu/langs/usage-policy#hasProcessing> <http://www.specialprivacy.eu/vocabs/processing#Analyse>) ObjectSomeValuesFrom(<http://www.specialprivacy.eu/langs/usage-policy#hasPurpose> :RecommendBelgianCoastEvents) ObjectSomeValuesFrom(<http://www.specialprivacy.eu/langs/usage-policy#hasRecipient> <http://www.specialprivacy.eu/vocabs/recipients#Ours>) ObjectSomeValuesFrom(<http://www.specialprivacy.eu/langs/usage-policy#hasStorage> ObjectIntersectionOf(ObjectIntersectionOf(ObjectSomeValuesFrom(<http://www.specialprivacy.eu/langs/usage-policy#hasDuration> <http://www.specialprivacy.eu/vocabs/duration#StatedPurpose>) ObjectSomeValuesFrom(<http://www.specialprivacy.eu/langs/usage-policy#hasLocation> ObjectIntersectionOf(<http://www.specialprivacy.eu/vocabs/locations#ControllerServers> <http://www.specialprivacy.eu/vocabs/locations#EU>))) DataSomeValuesFrom(<http://www.specialprivacy.eu/langs/usage-policy#durationInDays> DatatypeRestriction(xsd:integer xsd:maxInclusive "42"^^xsd:integer)))) ObjectSomeValuesFrom(<http://www.specialprivacy.eu/regulations/gdpr#hasLegalBasis> <http://www.specialprivacy.eu/regulations/gdpr#Art6_1_a_Consent>)))

# Class: :Policy6 (:Policy6)

AnnotationAssertion(:activityDescription :Policy6 "Link an event to a data subject's personal interest."^^xsd:string)
AnnotationAssertion(rdfs:comment :Policy6 "Assumption: Demographic is not part of the Profile4RecommenderSystem.")
EquivalentClasses(:Policy6 ObjectIntersectionOf(ObjectSomeValuesFrom(<http://www.specialprivacy.eu/langs/business-policy#hasDuty> <http://www.specialprivacy.eu/regulations/gdpr#Art12-22_SubjectRights>) ObjectSomeValuesFrom(<http://www.specialprivacy.eu/langs/business-policy#hasDuty> <http://www.specialprivacy.eu/regulations/gdpr#Art32-37_Obligations>) ObjectSomeValuesFrom(<http://www.specialprivacy.eu/langs/usage-policy#hasData> ObjectIntersectionOf(<http://www.specialprivacy.eu/vocabs/data#PersonalData> ObjectUnionOf(:Profile4RecommenderSystem <http://www.specialprivacy.eu/vocabs/data#Demographic> <http://www.specialprivacy.eu/vocabs/data#Location>))) ObjectSomeValuesFrom(<http://www.specialprivacy.eu/langs/usage-policy#hasProcessing> ObjectUnionOf(<http://www.specialprivacy.eu/vocabs/processing#Aggregate> <http://www.specialprivacy.eu/vocabs/processing#Analyse> <http://www.specialprivacy.eu/vocabs/processing#Query>)) ObjectSomeValuesFrom(<http://www.specialprivacy.eu/langs/usage-policy#hasPurpose> :RecommendBelgianCoastEvents) ObjectSomeValuesFrom(<http://www.specialprivacy.eu/langs/usage-policy#hasRecipient> <http://www.specialprivacy.eu/vocabs/recipients#Ours>) ObjectSomeValuesFrom(<http://www.specialprivacy.eu/langs/usage-policy#hasStorage> ObjectIntersectionOf(ObjectSomeValuesFrom(<http://www.specialprivacy.eu/langs/usage-policy#hasDuration> <http://www.specialprivacy.eu/vocabs/duration#BusinessPractices>) ObjectSomeValuesFrom(<http://www.specialprivacy.eu/langs/usage-policy#hasLocation> ObjectIntersectionOf(<http://www.specialprivacy.eu/vocabs/locations#ControllerServers> <http://www.specialprivacy.eu/vocabs/locations#EU>)))) ObjectSomeValuesFrom(<http://www.specialprivacy.eu/regulations/gdpr#hasLegalBasis> <http://www.specialprivacy.eu/regulations/gdpr#Art6_1_a_Consent>)))

# Class: :Profile4RecommenderSystem (:Profile4RecommenderSystem)

SubClassOf(:Profile4RecommenderSystem <http://www.specialprivacy.eu/vocabs/data#Profile>)

# Class: :RecommendBelgianCoastEvents (:RecommendBelgianCoastEvents)

SubClassOf(:RecommendBelgianCoastEvents <http://www.specialprivacy.eu/langs/usage-policy#AnyPurpose>)


)